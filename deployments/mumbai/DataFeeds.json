{
  "address": "0xd1110c0a27Ef69b40061F22c7d38e850556F8B1C",
  "abi": [
    {
      "inputs": [],
      "name": "WrongMaxNumber",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CONTRACT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "bytes_",
          "type": "bytes"
        }
      ],
      "name": "getNumbersFromBytes",
      "outputs": [
        {
          "internalType": "uint8[]",
          "name": "",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "from_",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "to_",
          "type": "uint8"
        }
      ],
      "name": "getOrderedArray",
      "outputs": [
        {
          "internalType": "uint8[]",
          "name": "",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt_",
          "type": "bytes32"
        },
        {
          "internalType": "uint8",
          "name": "maxNumber_",
          "type": "uint8"
        }
      ],
      "name": "getRandomBingoNumbers",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "salt_",
          "type": "bytes32"
        }
      ],
      "name": "getRandomLotto_6_49",
      "outputs": [
        {
          "internalType": "bytes6",
          "name": "",
          "type": "bytes6"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x75f5223d0469daced38c82a7ec902ab3273666ef7f1a296231081bf3c51a1faf",
  "receipt": {
    "to": null,
    "from": "0x340D999F5DD91CBB5Dd61f79825AD26685E195c5",
    "contractAddress": "0xd1110c0a27Ef69b40061F22c7d38e850556F8B1C",
    "transactionIndex": 0,
    "gasUsed": "799588",
    "logsBloom": "0x
    "blockHash": "0x2facb2328a0f711fc179621db3b08e44ced76ea16dd1bda7858a8b23d5a9fd28",
    "transactionHash": "0x75f5223d0469daced38c82a7ec902ab3273666ef7f1a296231081bf3c51a1faf",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 47846301,
        "transactionHash": "0x75f5223d0469daced38c82a7ec902ab3273666ef7f1a296231081bf3c51a1faf",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000340d999f5dd91cbb5dd61f79825ad26685e195c5",
          "0x0000000000000000000000005082f249cdb2f2c1ee035e4f423c46ea2dab3ab1"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000dc705a7032f240000000000000000000000000000000000000000000000000179594f921c122000000000000000000000000000000000000000000000087e375185f9e35d7a90000000000000000000000000000000000000000000000000016b9249eb18e2fc00000000000000000000000000000000000000000000087e375f4cff8a60a9b4",
        "logIndex": 0,
        "blockHash": "0x2facb2328a0f711fc179621db3b08e44ced76ea16dd1bda7858a8b23d5a9fd28"
      }
    ],
    "blockNumber": 47846301,
    "cumulativeGasUsed": "799588",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 3,
  "solcInputHash": "12809d86e6e293171a416ad719189bfb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WrongMaxNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CONTRACT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"bytes_\",\"type\":\"bytes\"}],\"name\":\"getNumbersFromBytes\",\"outputs\":[{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"from_\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"to_\",\"type\":\"uint8\"}],\"name\":\"getOrderedArray\",\"outputs\":[{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"maxNumber_\",\"type\":\"uint8\"}],\"name\":\"getRandomBingoNumbers\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt_\",\"type\":\"bytes32\"}],\"name\":\"getRandomLotto_6_49\",\"outputs\":[{\"internalType\":\"bytes6\",\"name\":\"\",\"type\":\"bytes6\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DataFeeds.sol\":\"DataFeeds\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":2000},\"remappings\":[]},\"sources\":{\"contracts/DataFeeds.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\nimport './interfaces/IDataFeeds.sol';\\n\\nerror WrongMaxNumber();\\n\\ncontract DataFeeds is IDataFeeds {\\n  bytes32 public constant CONTRACT_ROLE = keccak256(\\\"CONTRACT_ROLE\\\");\\n\\n  function getRandomLotto_6_49(bytes32 salt_) external view returns(bytes6) {\\n    bytes32 random = keccak256(abi.encodePacked(block.prevrandao, block.number, block.timestamp));\\n\\n    uint8[] memory orderedArray = getOrderedArray(1, 49);\\n    uint8[6] memory resultNumbers;\\n\\n    for (uint8 i = 0; i < 6; i += 1) {\\n      uint randomNumber = uint256(keccak256(abi.encodePacked(\\n        salt_[i + 4], salt_[i + 3], salt_[i + 2], salt_[i + 1], salt_[i],\\n        random[i], random[i + 1], random[i + 2], random[i + 3], random[i + 4]\\n      )));\\n      uint index = _getRoundNumber(randomNumber, 48 - i);\\n      resultNumbers[i] = orderedArray[index];\\n      orderedArray[index] = orderedArray[orderedArray.length - 1 - i];\\n    }\\n\\n    return bytes6(abi.encodePacked(resultNumbers[0], resultNumbers[1], resultNumbers[2], resultNumbers[3], resultNumbers[4], resultNumbers[5]));\\n  }\\n\\n  function getRandomBingoNumbers(bytes32 salt_, uint8 maxNumber_) external view returns(bytes memory) {\\n    if (maxNumber_ > 96) revert WrongMaxNumber();\\n    if (maxNumber_ == 0) revert WrongMaxNumber();\\n\\n    bytes memory random = abi.encodePacked(\\n      keccak256(abi.encodePacked(block.number, salt_)),\\n      keccak256(abi.encodePacked(block.prevrandao, salt_)),\\n      keccak256(abi.encodePacked(block.timestamp, salt_))\\n    );\\n    uint8[] memory orderedArray = getOrderedArray(1, maxNumber_);\\n\\n    bytes memory result = new bytes(maxNumber_);\\n\\n    for (uint8 i = 0; i < maxNumber_ - 1; i += 1) {\\n      uint randomNumber = uint256(keccak256(abi.encodePacked(random[i])));\\n      uint index = _getRoundNumber(randomNumber, maxNumber_ - i - 1);\\n      result[i] = bytes1(orderedArray[index]);\\n      orderedArray[index] = orderedArray[maxNumber_ - 1 - i];\\n    }\\n\\n    result[maxNumber_ - 1] = bytes1(orderedArray[0]);\\n\\n    return result;\\n  }\\n\\n  function getOrderedArray(uint8 from_, uint8 to_) public pure returns(uint8[] memory) {\\n    if (from_ > to_) revert('DataFeeds: Wrong borders');\\n\\n    uint8[] memory result = new uint8[](to_ - from_ + 1);\\n\\n    for (uint8 i = 0; i <= to_ - from_; i += 1) {\\n      result[i] = from_ + i;\\n    }\\n\\n    return result;\\n  }\\n\\n  function getNumbersFromBytes(bytes memory bytes_) public pure returns(uint8[] memory) {\\n    uint8[] memory result = new uint8[](bytes_.length);\\n    for (uint i = 0; i < bytes_.length; i += 1) {\\n      result[i] = uint8(bytes_[i]);\\n    }\\n\\n    return result;\\n  }\\n\\n  // Need big value number >>> maxValue\\n  function _getRoundNumber(uint number_, uint8 maxNumber_) private pure returns(uint8) {\\n    if (maxNumber_ == 0) revert WrongMaxNumber();\\n\\n    return uint8(number_ % (maxNumber_ + 1));\\n  }\\n}\\n\",\"keccak256\":\"0x558bd3ef02653a631fd7c7181ceaff9b5d2d281e1f59f8b8897b299e7e73188a\",\"license\":\"MIT\"},\"contracts/interfaces/IDataFeeds.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.24;\\n\\ninterface IDataFeeds {\\n  function getRandomLotto_6_49(bytes32 salt_) external returns(bytes6);\\n\\n  function getRandomBingoNumbers(bytes32 salt_, uint8 maxNumber_) external returns(bytes memory);\\n\\n  function getOrderedArray(uint8 from_, uint8 to_) external returns(uint8[] memory);\\n\\n  function getNumbersFromBytes(bytes memory bytes_) external returns(uint8[] memory);\\n}\",\"keccak256\":\"0x60ea4d985816f82f1c8b3e2c5286a0b770c8a8084f18a92104eb22c75083066a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610d88806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063473336fe11610050578063473336fe146100c6578063a87b90fb146100e6578063caf82a12146100f957600080fd5b806303fe46ab1461006c578063446b0ef6146100a6575b600080fd5b6100937f364d3d7565c7a8300c96fd53e065d19b65848d7b23b3191adcd55621c744223c81565b6040519081526020015b60405180910390f35b6100b96100b4366004610a90565b61013d565b60405161009d9190610b41565b6100d96100d4366004610b9e565b6101f0565b60405161009d9190610bca565b6100b96100f4366004610c19565b61053f565b61010c610107366004610c43565b610677565b6040517fffffffffffff0000000000000000000000000000000000000000000000000000909116815260200161009d565b60606000825167ffffffffffffffff81111561015b5761015b610a7a565b604051908082528060200260200182016040528015610184578160200160208202803683370190505b50905060005b83518110156101e9578381815181106101a5576101a5610c5c565b602001015160f81c60f81b60f81c8282815181106101c5576101c5610c5c565b60ff909216602092830291909101909101526101e2600182610c88565b905061018a565b5092915050565b6060808260ff161115610216576040516337f8e71160e21b815260040160405180910390fd5b8160ff1660000361023a576040516337f8e71160e21b815260040160405180910390fd5b60408051436020820152908101849052600090606001604051602081830303815290604052805190602001204485604051602001610282929190918252602082015260400190565b6040516020818303038152906040528051906020012042866040516020016102b4929190918252602082015260400190565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040529050600061030260018561053f565b905060008460ff1667ffffffffffffffff81111561032257610322610a7a565b6040519080825280601f01601f19166020018201604052801561034c576020820181803683370190505b50905060005b61035d600187610c9b565b60ff168160ff1610156104c5576000848260ff168151811061038157610381610c5c565b016020908101516040517fff000000000000000000000000000000000000000000000000000000000000009091169181019190915260210160408051601f198184030181529190528051602090910120905060006103f48260016103e5868c610c9b565b6103ef9190610c9b565b610a17565b60ff16905084818151811061040b5761040b610c5c565b602002602001015160f81b848460ff168151811061042b5761042b610c5c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350848361046760018b610c9b565b6104719190610c9b565b60ff168151811061048457610484610c5c565b602002602001015185828151811061049e5761049e610c5c565b60ff90921660209283029190910190910152506104be9050600182610cb4565b9050610352565b50816000815181106104d9576104d9610c5c565b602002602001015160f81b816001876104f29190610c9b565b60ff168151811061050557610505610c5c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350925050505b92915050565b60608160ff168360ff1611156105b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4461746146656564733a2057726f6e6720626f72646572730000000000000000604482015260640160405180910390fd5b60006105c18484610c9b565b6105cc906001610cb4565b60ff1667ffffffffffffffff8111156105e7576105e7610a7a565b604051908082528060200260200182016040528015610610578160200160208202803683370190505b50905060005b6106208585610c9b565b60ff168160ff161161066f576106368186610cb4565b828260ff168151811061064b5761064b610c5c565b60ff90921660209283029190910190910152610668600182610cb4565b9050610616565b509392505050565b604080514460208201524391810191909152426060820152600090819060800160405160208183030381529060405280519060200120905060006106bd6001603161053f565b90506106c7610a5c565b60005b60068160ff161015610975576000866106e4836004610cb4565b60ff16602081106106f7576106f7610c5c565b1a60f81b87610707846003610cb4565b60ff166020811061071a5761071a610c5c565b1a60f81b8861072a856002610cb4565b60ff166020811061073d5761073d610c5c565b1a60f81b8961074d866001610cb4565b60ff166020811061076057610760610c5c565b1a60f81b8a8660ff166020811061077957610779610c5c565b1a60f81b898760ff166020811061079257610792610c5c565b1a60f81b8a6107a2896001610cb4565b60ff16602081106107b5576107b5610c5c565b1a60f81b8b6107c58a6002610cb4565b60ff16602081106107d8576107d8610c5c565b1a60f81b8c6107e88b6003610cb4565b60ff16602081106107fb576107fb610c5c565b1a60f81b8d61080b8c6004610cb4565b60ff166020811061081e5761081e610c5c565b6040517fff000000000000000000000000000000000000000000000000000000000000009b8c166020820152998b1660218b0152978a1660228a0152958916602389015293881660248801529187166025870152861660268601528516602785015284166028840152901a60f81b9091166029820152602a0160408051601f198184030181529190528051602090910120905060006108c2826103ef856030610c9b565b60ff1690508481815181106108d9576108d9610c5c565b6020026020010151848460ff16600681106108f6576108f6610c5c565b602002019060ff16908160ff1681525050848360ff166001875161091a9190610ccd565b6109249190610ccd565b8151811061093457610934610c5c565b602002602001015185828151811061094e5761094e610c5c565b60ff909216602092830291909101909101525061096e9050600182610cb4565b90506106ca565b5080516020808301516040808501516060860151608087015160a088015193517fff0000000000000000000000000000000000000000000000000000000000000060f898891b81169782019790975294871b8616602186015291861b85166022850152851b84166023840152841b8316602483015290921b166025820152602601604051602081830303815290604052610a0e90610ce0565b95945050505050565b60008160ff16600003610a3d576040516337f8e71160e21b815260040160405180910390fd5b610a48826001610cb4565b610a559060ff1684610d30565b9392505050565b6040518060c001604052806006906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610aa257600080fd5b813567ffffffffffffffff80821115610aba57600080fd5b818401915084601f830112610ace57600080fd5b813581811115610ae057610ae0610a7a565b604051601f8201601f19908116603f01168101908382118183101715610b0857610b08610a7a565b81604052828152876020848701011115610b2157600080fd5b826020860160208301376000928101602001929092525095945050505050565b6020808252825182820181905260009190848201906040850190845b81811015610b7c57835160ff1683529284019291840191600101610b5d565b50909695505050505050565b803560ff81168114610b9957600080fd5b919050565b60008060408385031215610bb157600080fd5b82359150610bc160208401610b88565b90509250929050565b60006020808352835180602085015260005b81811015610bf857858101830151858201604001528201610bdc565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610c2c57600080fd5b610c3583610b88565b9150610bc160208401610b88565b600060208284031215610c5557600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561053957610539610c72565b60ff828116828216039081111561053957610539610c72565b60ff818116838216019081111561053957610539610c72565b8181038181111561053957610539610c72565b6000815160208301517fffffffffffff000000000000000000000000000000000000000000000000000080821693506006831015610d285780818460060360031b1b83161693505b505050919050565b600082610d4d57634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220277d79ea85265c047bca1716a105ec30eae7a050400f3415371894ce6d023e1c64736f6c63430008180033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c8063473336fe11610050578063473336fe146100c6578063a87b90fb146100e6578063caf82a12146100f957600080fd5b806303fe46ab1461006c578063446b0ef6146100a6575b600080fd5b6100937f364d3d7565c7a8300c96fd53e065d19b65848d7b23b3191adcd55621c744223c81565b6040519081526020015b60405180910390f35b6100b96100b4366004610a90565b61013d565b60405161009d9190610b41565b6100d96100d4366004610b9e565b6101f0565b60405161009d9190610bca565b6100b96100f4366004610c19565b61053f565b61010c610107366004610c43565b610677565b6040517fffffffffffff0000000000000000000000000000000000000000000000000000909116815260200161009d565b60606000825167ffffffffffffffff81111561015b5761015b610a7a565b604051908082528060200260200182016040528015610184578160200160208202803683370190505b50905060005b83518110156101e9578381815181106101a5576101a5610c5c565b602001015160f81c60f81b60f81c8282815181106101c5576101c5610c5c565b60ff909216602092830291909101909101526101e2600182610c88565b905061018a565b5092915050565b6060808260ff161115610216576040516337f8e71160e21b815260040160405180910390fd5b8160ff1660000361023a576040516337f8e71160e21b815260040160405180910390fd5b60408051436020820152908101849052600090606001604051602081830303815290604052805190602001204485604051602001610282929190918252602082015260400190565b6040516020818303038152906040528051906020012042866040516020016102b4929190918252602082015260400190565b60408051601f1981840301815282825280516020918201209083019490945281019190915260608101919091526080016040516020818303038152906040529050600061030260018561053f565b905060008460ff1667ffffffffffffffff81111561032257610322610a7a565b6040519080825280601f01601f19166020018201604052801561034c576020820181803683370190505b50905060005b61035d600187610c9b565b60ff168160ff1610156104c5576000848260ff168151811061038157610381610c5c565b016020908101516040517fff000000000000000000000000000000000000000000000000000000000000009091169181019190915260210160408051601f198184030181529190528051602090910120905060006103f48260016103e5868c610c9b565b6103ef9190610c9b565b610a17565b60ff16905084818151811061040b5761040b610c5c565b602002602001015160f81b848460ff168151811061042b5761042b610c5c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350848361046760018b610c9b565b6104719190610c9b565b60ff168151811061048457610484610c5c565b602002602001015185828151811061049e5761049e610c5c565b60ff90921660209283029190910190910152506104be9050600182610cb4565b9050610352565b50816000815181106104d9576104d9610c5c565b602002602001015160f81b816001876104f29190610c9b565b60ff168151811061050557610505610c5c565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350925050505b92915050565b60608160ff168360ff1611156105b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4461746146656564733a2057726f6e6720626f72646572730000000000000000604482015260640160405180910390fd5b60006105c18484610c9b565b6105cc906001610cb4565b60ff1667ffffffffffffffff8111156105e7576105e7610a7a565b604051908082528060200260200182016040528015610610578160200160208202803683370190505b50905060005b6106208585610c9b565b60ff168160ff161161066f576106368186610cb4565b828260ff168151811061064b5761064b610c5c565b60ff90921660209283029190910190910152610668600182610cb4565b9050610616565b509392505050565b604080514460208201524391810191909152426060820152600090819060800160405160208183030381529060405280519060200120905060006106bd6001603161053f565b90506106c7610a5c565b60005b60068160ff161015610975576000866106e4836004610cb4565b60ff16602081106106f7576106f7610c5c565b1a60f81b87610707846003610cb4565b60ff166020811061071a5761071a610c5c565b1a60f81b8861072a856002610cb4565b60ff166020811061073d5761073d610c5c565b1a60f81b8961074d866001610cb4565b60ff166020811061076057610760610c5c565b1a60f81b8a8660ff166020811061077957610779610c5c565b1a60f81b898760ff166020811061079257610792610c5c565b1a60f81b8a6107a2896001610cb4565b60ff16602081106107b5576107b5610c5c565b1a60f81b8b6107c58a6002610cb4565b60ff16602081106107d8576107d8610c5c565b1a60f81b8c6107e88b6003610cb4565b60ff16602081106107fb576107fb610c5c565b1a60f81b8d61080b8c6004610cb4565b60ff166020811061081e5761081e610c5c565b6040517fff000000000000000000000000000000000000000000000000000000000000009b8c166020820152998b1660218b0152978a1660228a0152958916602389015293881660248801529187166025870152861660268601528516602785015284166028840152901a60f81b9091166029820152602a0160408051601f198184030181529190528051602090910120905060006108c2826103ef856030610c9b565b60ff1690508481815181106108d9576108d9610c5c565b6020026020010151848460ff16600681106108f6576108f6610c5c565b602002019060ff16908160ff1681525050848360ff166001875161091a9190610ccd565b6109249190610ccd565b8151811061093457610934610c5c565b602002602001015185828151811061094e5761094e610c5c565b60ff909216602092830291909101909101525061096e9050600182610cb4565b90506106ca565b5080516020808301516040808501516060860151608087015160a088015193517fff0000000000000000000000000000000000000000000000000000000000000060f898891b81169782019790975294871b8616602186015291861b85166022850152851b84166023840152841b8316602483015290921b166025820152602601604051602081830303815290604052610a0e90610ce0565b95945050505050565b60008160ff16600003610a3d576040516337f8e71160e21b815260040160405180910390fd5b610a48826001610cb4565b610a559060ff1684610d30565b9392505050565b6040518060c001604052806006906020820280368337509192915050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610aa257600080fd5b813567ffffffffffffffff80821115610aba57600080fd5b818401915084601f830112610ace57600080fd5b813581811115610ae057610ae0610a7a565b604051601f8201601f19908116603f01168101908382118183101715610b0857610b08610a7a565b81604052828152876020848701011115610b2157600080fd5b826020860160208301376000928101602001929092525095945050505050565b6020808252825182820181905260009190848201906040850190845b81811015610b7c57835160ff1683529284019291840191600101610b5d565b50909695505050505050565b803560ff81168114610b9957600080fd5b919050565b60008060408385031215610bb157600080fd5b82359150610bc160208401610b88565b90509250929050565b60006020808352835180602085015260005b81811015610bf857858101830151858201604001528201610bdc565b506000604082860101526040601f19601f8301168501019250505092915050565b60008060408385031215610c2c57600080fd5b610c3583610b88565b9150610bc160208401610b88565b600060208284031215610c5557600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082018082111561053957610539610c72565b60ff828116828216039081111561053957610539610c72565b60ff818116838216019081111561053957610539610c72565b8181038181111561053957610539610c72565b6000815160208301517fffffffffffff000000000000000000000000000000000000000000000000000080821693506006831015610d285780818460060360031b1b83161693505b505050919050565b600082610d4d57634e487b7160e01b600052601260045260246000fd5b50069056fea2646970667358221220277d79ea85265c047bca1716a105ec30eae7a050400f3415371894ce6d023e1c64736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}